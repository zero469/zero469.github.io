<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>nm命令生成导出符号表中符号含义</title>
      <link href="/nm%E5%91%BD%E4%BB%A4%E7%94%9F%E6%88%90%E5%AF%BC%E5%87%BA%E7%AC%A6%E5%8F%B7%E8%A1%A8%E4%B8%AD%E7%AC%A6%E5%8F%B7%E5%90%AB%E4%B9%89/"/>
      <url>/nm%E5%91%BD%E4%BB%A4%E7%94%9F%E6%88%90%E5%AF%BC%E5%87%BA%E7%AC%A6%E5%8F%B7%E8%A1%A8%E4%B8%AD%E7%AC%A6%E5%8F%B7%E5%90%AB%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<h2 id="符号表"><a href="#符号表" class="headerlink" title="符号表"></a>符号表</h2><ul><li><strong>符号表是一种用于语言翻译器（例如编译器和解释器）中的数据结构。在符号表中，程序源代码中的每个标识符都和它的声明或使用信息绑定在一起，比如其数据类型、作用域以及内存地址。</strong></li><li><strong>符号表只记录静态存储的符号，如静态变量，全局变量等</strong></li></ul><h2 id="全局变量和static变量"><a href="#全局变量和static变量" class="headerlink" title="全局变量和static变量"></a>全局变量和static变量</h2><ul><li><strong>不同变量的主要区别是存储位置和作用域的不同</strong></li><li>全局变量是定义在所有函数外部的变量，作用域是整个程序的所有代码文件</li><li>局部变量是定义在函数内部的变量，作用域只在函数内，<strong>且存储在栈中，使用完后会被销毁</strong></li><li>用static修饰的变量称为静态变量，静态变量分为全局静态变量和局部静态变量</li><li>全局静态变量的作用域为当前代码文件</li><li>局部静态变量的作用域为当前函数，但是其在整个程序运行期间都存在，只是不能被使用</li><li><strong>所有的全局变量和静态变量都存在静态存储区，生存周期和程序的生存周期一样</strong></li></ul><h2 id="查看c语言符号表"><a href="#查看c语言符号表" class="headerlink" title="查看c语言符号表"></a>查看c语言符号表</h2><p><strong>1. 将源代码编译为目标文件(*.o)</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c source.c</span><br></pre></td></tr></table></figure></p><p><strong>2. 使用 _nm_ 命令从目标文件中提取符号表，然后将输出结果重定向到 <em>result.txt</em> 中</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nm source.o &gt; result.txt</span><br></pre></td></tr></table></figure></p><h2 id="符号表中常见符号类型总结"><a href="#符号表中常见符号类型总结" class="headerlink" title="符号表中常见符号类型总结"></a>符号表中常见符号类型总结</h2><table><thead><tr><th style="text-align:center">符号类型</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">U</td><td style="text-align:center">未定义符号，在当前文件中使用，但是定义在其他文件中</td></tr><tr><td style="text-align:center">T/t</td><td style="text-align:center">代码段中符号，一般是非static/static函数</td></tr><tr><td style="text-align:center">B</td><td style="text-align:center">符号处于BSS段内，一般是未显式初始化的全局变量</td></tr><tr><td style="text-align:center">b</td><td style="text-align:center">符号处于BSS段内，一般是未显式初始化的(全局/局部)静态变量</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">未初始化的全局变量，并且在别的地方被引用</td></tr><tr><td style="text-align:center">D/d</td><td style="text-align:center">初始化过的全局或静态变量</td></tr></tbody></table><p><em>小写符号类型一般表示该符号是locall的，大写的一般表示该符号是global(external)的</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> global_var;                         <span class="comment">//未初始化但被引用过的的全局变量</span></span><br><span class="line"><span class="keyword">int</span> global_var_init = <span class="number">26</span>;               <span class="comment">//初始化的全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> static_var;                  <span class="comment">//未初始化的静态变量</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> static_var_init = <span class="number">25</span>;        <span class="comment">//初始化的静态变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> extern_var;                  <span class="comment">//外部变量</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">extern_function</span><span class="params">(<span class="keyword">int</span>)</span></span>;        <span class="comment">//外部函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">static_function</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span><span class="comment">//静态函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> local_automatic_var;            <span class="comment">//局部变量，在stack空间，不出现在符号表中</span></span><br><span class="line"></span><br><span class="line">local_automatic_var = x + y;</span><br><span class="line"><span class="keyword">return</span> local_automatic_var;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">global_function</span><span class="params">(<span class="keyword">int</span> p)</span>              <span class="comment">//非静态函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> local_static_var;        <span class="comment">//未初始化的局部静态变量</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> local_static_var_init = <span class="number">5</span>;<span class="comment">//初始化的局部静态变量</span></span><br><span class="line"></span><br><span class="line">local_static_var = static_function(local_static_var_init, p);</span><br><span class="line"><span class="keyword">return</span> local_static_var;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">static_var = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">global_var = global_function(<span class="number">2</span>);</span><br><span class="line">extern_var = extern_function(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">                 U extern_function</span><br><span class="line">                 U extern_var</span><br><span class="line"><span class="number">000000000000001</span>a T global_function</span><br><span class="line"><span class="number">0000000000000004</span> C global_var</span><br><span class="line"><span class="number">0000000000000000</span> D global_var_init</span><br><span class="line"><span class="number">0000000000000004</span> b local_static_var<span class="number">.1736</span></span><br><span class="line"><span class="number">0000000000000008</span> d local_static_var_init<span class="number">.1737</span></span><br><span class="line"><span class="number">0000000000000045</span> T main</span><br><span class="line"><span class="number">0000000000000000</span> t static_function</span><br><span class="line"><span class="number">0000000000000000</span> b static_var</span><br><span class="line"><span class="number">0000000000000004</span> d static_var_init</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
  
</search>
